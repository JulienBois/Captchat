{"ast":null,"code":"var _jsxFileName = \"/Users/tdmaithi/Documents/JS/captcha-react-nodejs/fontend/src/App.js\";\nimport React from \"react\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  // Constructor \n  constructor(props) {\n    super(props);\n    this.state = {\n      captcha: {},\n      dataisLoaded: false,\n      timer: 30,\n      falseCounter: 0,\n      secondsCounter: 30\n    };\n  } // ComponentDidMount is used to call api from backend to get the captcha object\n  // execute the code \n\n\n  componentDidMount() {\n    fetch('http://localhost:8080/captcha/', {\n      method: 'GET',\n      headers: {\n        accept: 'application/json'\n      }\n    }).then(res => {\n      if (res.headers.get(\"content-type\") && res.headers.get(\"content-type\").toLowerCase().indexOf(\"application/json\") >= 0) {\n        return res.json();\n      } else {\n        throw new TypeError();\n      }\n    }).then(json => {\n      // create imagesSelected\n      let temp = {\n        idQuestion: json === null || json === void 0 ? void 0 : json.idQuestion,\n        question: json === null || json === void 0 ? void 0 : json.question,\n        images: []\n      };\n\n      for (let i = 0; i < (json === null || json === void 0 ? void 0 : json.images.length); i++) {\n        let img = {\n          idImage: json === null || json === void 0 ? void 0 : json.images[i].idImage,\n          urlImage: json === null || json === void 0 ? void 0 : json.images[i].urlImage,\n          isSelected: false\n        };\n        temp.images.push(img);\n      }\n\n      this.setState({\n        captcha: temp,\n        dataisLoaded: true\n      });\n    }).catch(rejected => {\n      console.log(rejected);\n    });\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  selectImage(elem) {\n    const {\n      captcha\n    } = this.state;\n    let copyCaptcha = JSON.parse(JSON.stringify(captcha)); // reset selected images\n\n    for (let i = 0; i < copyCaptcha.images.length; i++) {\n      copyCaptcha.images[i].isSelected = false;\n    }\n\n    for (let i = 0; i < copyCaptcha.images.length; i++) {\n      if (copyCaptcha.images[i].idImage === parseInt(elem.currentTarget.id)) {\n        copyCaptcha.images[i].isSelected = !copyCaptcha.images[i].isSelected;\n        break;\n      }\n    }\n\n    this.setState({\n      captcha: copyCaptcha\n    });\n  }\n\n  render() {\n    const {\n      dataisLoaded,\n      captcha,\n      secondsCounter,\n      falseCounter,\n      counter\n    } = this.state;\n    if (!dataisLoaded) return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Please wait some time.... \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 31\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" Captcha Application \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"timer\",\n          children: [\"Timer \", secondsCounter]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 66\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Countdown: \", counter]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Question:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 16\n          }, this), \" \", captcha.question, \". \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid\",\n            children: captcha === null || captcha === void 0 ? void 0 : captcha.images.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: item.isSelected ? 'cell selected' : 'cell',\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: item.urlImage,\n                alt: item.urlImage,\n                id: item.idImage,\n                onClick: this.selectImage.bind(this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 21\n              }, this)\n            }, item.idImage, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Send\",\n          className: \"btn btn-primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","App","Component","constructor","props","state","captcha","dataisLoaded","timer","falseCounter","secondsCounter","componentDidMount","fetch","method","headers","accept","then","res","get","toLowerCase","indexOf","json","TypeError","temp","idQuestion","question","images","i","length","img","idImage","urlImage","isSelected","push","setState","catch","rejected","console","log","componentWillUnmount","clearInterval","timerId","selectImage","elem","copyCaptcha","JSON","parse","stringify","parseInt","currentTarget","id","render","counter","map","item","bind"],"sources":["/Users/tdmaithi/Documents/JS/captcha-react-nodejs/fontend/src/App.js"],"sourcesContent":["import React from \"react\";\nimport './App.css';\n\nclass App extends React.Component {\n\n  // Constructor \n  constructor(props) {\n    super(props);\n    this.state = {\n        captcha: {},\n        dataisLoaded: false,\n        timer: 30,\n        falseCounter: 0,\n        secondsCounter: 30,\n    };\n  }\n\n  // ComponentDidMount is used to call api from backend to get the captcha object\n  // execute the code \n  componentDidMount() {\n    fetch('http://localhost:8080/captcha/', {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n      },\n    }).then((res) => {\n        if(res.headers.get(\"content-type\") &&\n          res.headers.get(\"content-type\").toLowerCase().indexOf(\"application/json\") >= 0) {\n          return res.json()\n        } else {\n          throw new TypeError()\n        }\n      })\n      .then((json) => {\n          // create imagesSelected\n          let temp = {\n            idQuestion: json?.idQuestion,\n            question: json?.question,\n            images: [],\n          };\n          for (let i = 0; i < json?.images.length; i++) {\n            let img = {\n              idImage: json?.images[i].idImage,\n              urlImage: json?.images[i].urlImage,\n              isSelected: false,\n            }\n            temp.images.push(img);\n          }\n\n          this.setState({\n            captcha: temp,\n            dataisLoaded: true,\n          });\n      })\n      .catch(rejected => {\n        console.log(rejected);\n    });\n\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  selectImage(elem) {\n    const { captcha } = this.state;\n    let copyCaptcha = JSON.parse(JSON.stringify(captcha));\n    // reset selected images\n    for (let i = 0; i < copyCaptcha.images.length; i++) {\n      copyCaptcha.images[i].isSelected = false;\n    }\n\n    for (let i = 0; i < copyCaptcha.images.length; i++) {\n      if(copyCaptcha.images[i].idImage ===  parseInt(elem.currentTarget.id)){\n        copyCaptcha.images[i].isSelected = !copyCaptcha.images[i].isSelected;\n        break;\n      }\n    }\n    this.setState({captcha: copyCaptcha});\n  }\n\n  render() {\n    const { dataisLoaded, captcha, secondsCounter, falseCounter, counter } = this.state;\n\n    if (!dataisLoaded) return <div>\n        <h1> Please wait some time.... </h1> </div> ;\n    return (\n      <div className = \"App\">\n        <div className = \"App-header\">\n          <h1> Captcha Application </h1>\n        </div>\n        <div className=\"row\">\n          <label className=\"timer\">Timer {secondsCounter}</label><br></br>\n          <div>Countdown: {counter}</div>\n        </div>\n        <form className=\"form-group\">\n          <h3> <b>Question:</b> {captcha.question}. </h3>\n          <div className=\"row\">\n            <div className=\"grid\">\n              {\n                captcha?.images.map((item) => ( \n                  <div className={item.isSelected ? 'cell selected' : 'cell'} key={item.idImage} >\n                    <img src={item.urlImage} alt={item.urlImage} id={item.idImage} onClick={this.selectImage.bind(this)} />\n                  </div>\n                ))\n              }\n            </div>\n          </div>\n          <input type = \"submit\" value = \"Send\" className=\"btn btn-primary\"/>\n        </form>\n    </div>\n    );\n  }\n}\n\nexport default App;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}